machine:
  xcode:
    version: "8.2"
  environment:
    # Used for compatibility with scripts made for Jenkins
    WORKSPACE: $(pwd) 
    JENKINS_HOME: WORKSPACE

checkout:
  post:
    # Copy the code to a subdirectory
    - mkdir -p "${CIRCLE_PROJECT_REPONAME}"
    - rsync -a . "${CIRCLE_PROJECT_REPONAME}/" --exclude "${CIRCLE_PROJECT_REPONAME}"
    # Clone scripts repo if not already cached
    - if [ ! -d "wire-ios-scripts" ]; then git clone https://github.com/wireapp/wire-ios-scripts.git; fi

dependencies:
  override:
    - bundle install:
        pwd:
          $CIRCLE_PROJECT_REPONAME
    - ./CI/bot-setup.sh:
        pwd:
          wire-ios-scripts
    - ./CI/Bots/bot-pre-build.swift:
        pwd:
          wire-ios-scripts
  cache_directories:
    - wire-ios-scripts

compile:
  override:
    - carthage bootstrap:
        pwd:
          $CIRCLE_PROJECT_REPONAME
    - xcodebuild -scheme ZMCDataModel clean analyze build-for-testing -enableCodeCoverage YES -destination platform=iOS\ Simulator,name=iPhone\ 7,OS=10.2 | xcpretty:
        pwd:
          $CIRCLE_PROJECT_REPONAME

test:
  override:
    - xcodebuild -scheme ZMCDataModel test-without-building -enableCodeCoverage YES -destination platform=iOS\ Simulator,name=iPhone\ 7,OS=10.2 | xcpretty -r junit --output tests.xml:
        pwd:
          $CIRCLE_PROJECT_REPONAME
    - coverage --html --input-format profdata --scheme ZMCDataModel --output-directory code_coverage .
  post:
    - mkdir -p $CIRCLE_TEST_REPORTS/junit/
    - mkdir -p $CIRCLE_TEST_REPORTS/code_coverage/
    - cp $CIRCLE_PROJECT_REPONAME/tests.xml $CIRCLE_TEST_REPORTS/junit/
    # - rsync -auv $CIRCLE_PROJECT_REPONAME/code-coverage/ $CIRCLE_TEST_REPORTS/code-coverage/