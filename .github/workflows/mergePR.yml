name: Merge PR v0.1.2

on: 
  issue_comment:

jobs:
  create_comment:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: guard for magic spell
        if: ${{ github.event.comment.body != 'release major' && github.event.comment.body != 'release minor' && github.event.comment.body != 'release patch'}}
        run: exit 1
      - name: guard for admins
        if: ${{ github.actor != 'billypchan' && github.actor != 'marcoconti83' && github.actor != 'typfel' && github.actor != 'johnxnguyen' && github.actor != 'David-Henner' && github.actor != 'KaterinaWire'}}
        run: |
          echo ${{ github.actor }} is not allowed for releasing
          exit 1
      - name: get release type
        id: releaseType
        run: |
          TYPE=`echo ${{ github.event.comment.body }} | cut -d " " -f 2`
          echo $TYPE
          echo "::set-output name=TYPE::$TYPE"
      - uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Hello, @${{ github.actor }}! Merging PR for command **${{ github.event.comment.body}}** for PR #**${{ github.event.issue.number }}**. Will create a **${{ steps.releaseType.outputs.TYPE }}** release after merged
      - name: Merge Pull Request 
        run: gh pr merge ${{ github.event.issue.html_url }} -s --admin
      - name: Get the next version tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          release_branches: 'develop'
          default_bump: ${{ steps.releaseType.outputs.TYPE }}
          dry_run: 'true'
      - uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Next version is ${{ steps.tag_version.outputs.new_tag }}
      - name: get the latest develop SHA
        id: developSha
        run: |
          SHA=`git ls-remote ${{ github.event.repository.html_url}} develop | cut -f 1`
          echo "::set-output name=SHA::$SHA"
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.developSha.outputs.SHA }}
      - name: tag
        run: |
          git status
          git config --global user.name "zenkins"
          git config --global user.email "iosx@wire.com"
          git tag -a ${{ steps.tag_version.outputs.new_tag }} ${{ steps.developSha.outputs.SHA }} -m"tagged by github action"
          git push origin ${{ steps.tag_version.outputs.new_tag }}
